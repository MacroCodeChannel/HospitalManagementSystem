@page "/addcountry"
@using HospitalManagementSystem.Data
@using HospitalManagementSystem.Models
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Authorization;
@inject ISnackbar snackBar
@inject UserManager<ApplicationUser> usermanager;
@attribute [Authorize]
@inject NavigationManager navigation

<div class="mx-2">
    <MudPaper Elevation="15" Class="p-4">
        <div class="row">
            <EditForm Model="country" OnValidSubmit="CreateNewCountry" FormName="addDepartment">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="col-md-12">
                    <h3>Add New Country</h3>
                </div>
                <div class="col-md-12">
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label for="countryCode">Code</label>
                            <InputText for="Code" class="form-control" @bind-Value="@country.Code" />
                            <ValidationMessage For="@(() => country.Code)" />
                        </div>
                        <div class="form-group col-md-6">
                            <label for="countryName">Name</label>
                            <InputText for="Name" class="form-control" @bind-Value="@country.Name" />
                            <ValidationMessage For="@(() => country.Name)" />
                        </div>
                    </div>
                    <div class="form-group mt-4">
                        <MudItem xs="12" Class="mt-4">
                            <MudStack Row Justify="Justify.SpaceBetween">
                                <MudButton Variant="Variant.Filled" Color="Color.Warning" StartIcon="@Icons.Material.Filled.ArrowCircleLeft" OnClick="BacktoList">
                                    Back to List
                                </MudButton>

                                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Save">
                                    Save Country
                                </MudButton>
                            </MudStack>
                        </MudItem>
                    </div>
                </div>
            </EditForm>
        </div>
    </MudPaper>
</div>
@code {

    [SupplyParameterFromForm]
    public Country country { get; set; } = new();

    public string UserId { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;
        if (user.Identity.IsAuthenticated)
        {
            var currentuser = await usermanager.GetUserAsync(user);
            UserId = currentuser.Id;
        }
    }


    protected async Task CreateNewCountry()
    {
        country.CreatedOn = DateTime.UtcNow;
        country.CreatedById = UserId;
        var result = await CountryService.AddCountryAsync(country);
        snackBar.Add("Country created successfully", Severity.Success);
        navigation.NavigateTo("/countries");
    }

    public void BacktoList()
    {
        navigation.NavigateTo("/countries");
    }
}
